---
# This playbook sets up lvm cache. Primarily written for the hyperconverged
# setup.

# Create PV for setting up cache with dataalignment of 256K for SSDs.
# Extend the existing volume group with the SSD (assuming SSD is used for
# caching)

- name: Extend volume group
  command: "vgextend --dataalignment 256K {{ item.vgname }} {{ item.cachedisk.split(',')[1] }}"
  # lvg:
  #    state: present
  #    vg: "{{ item.vgname }}"
  #    pvs: "{{ item.cachedisk }}"
  #    pv_options: "--dataalignment 256K"
  with_items: "{{ gluster_infra_cache_vars }}"
  register: resp
  failed_when: resp.rc not in [0, 5]
  changed_when: resp.rc == 0

#- name: Change attributes of LV
#  command: "lvchange --zero n --type thin-pool -n {{ item.cachethinpoolname }} {{ item.vgname }}"
  # lvol:
  #    state: present
  #    vg: "{{ item.vgname }}"
  #    thinpool: "{{ item.cachethinpoolname }}"
  #    opts: " --zero n "
#  with_items: "{{ gluster_infra_cache_vars }}"

- name: Create LV for cache
  ansible.builtin.expect:
    command: "lvcreate -L {{ item.cachelvsize }} -n {{ item.cachelvname }} {{ item.vgname }}"
    responses:
      (.*)WARNING:(.*): "y"
  # lvol:
  #    state: present
  #    vg: "{{ item.vgname }}"
  #    lv: "{{ item.cachelvname }}"
  #    size: "{{ item.cachelvsize }}"
  with_items: "{{ gluster_infra_cache_vars }}"

- name: Create metadata LV for cache
  command: "lvcreate -L {{ item.cachemetalvsize }} -n {{ item.cachemetalvname }} {{ item.vgname }}"
  # lvol:
  #    state: present
  #    vg: "{{ item.vgname }}"
  #    lv: "{{ item.cachemetalvname }}"
  #    size: "{{ item.cachemetalvsize }}"
  with_items: "{{ gluster_infra_cache_vars }}"
  when: item.cachemetalvname is defined

- name: Convert logical volume to a cache pool LV
  command: >
     lvconvert -y --type cache-pool --poolmetadata {{ item.cachemetalvname }}
        --poolmetadataspare n
        --cachemode {{item.cachemode | default('writethrough')}}
        "/dev/{{item.vgname}}/{{item.cachelvname}}"
  with_items: "{{ gluster_infra_cache_vars }}"
  when: item.cachemetalvname is defined

# It is valid not to have cachemetalvname! Writing a separate task not to
# complicate things.
- name: Convert logical volume to a cache pool LV without cachemetalvname
  command: >
     lvconvert -y --type cache-pool --poolmetadataspare n --cachemode {{item.cachemode | default('writethrough')}} /dev/{{item.vgname}}/{{item.cachelvname}}
  with_items: "{{ gluster_infra_cache_vars }}"
  when: item.cachemetalvname is not defined

# Run lvs -a -o +devices to see the cache settings
- name: Convert an existing logical volume to a cache LV
  command: >
     lvconvert -y --type cache --cachepool /dev/{{item.vgname}}/{{item.cachelvname}} /dev/{{item.vgname}}/{{item.cachethinpoolname}}
  with_items: "{{ gluster_infra_cache_vars }}"
